plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
		url "https://jitpack.io"
	}

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	maven { url 'https://maven.wispforest.io/releases' }
	maven { url 'https://maven.su5ed.dev/releases' }
	maven { url 'https://maven.shedaniel.me/' }
}

loom {
	accessWidenerPath = file("src/main/resources/gravestones.accesswidener")

	splitEnvironmentSourceSets()

	mods {
		"gravestones" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runConfigs.all {
		ideConfigGenerated true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${property("yarn_mappings")}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property("loader_version")}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property("fabric_version")}"

	// Core mod
	modImplementation "com.github.PneumonoIsNotAvailable:PneumonoCore:${property("core_version")}"

	// ModMenu
	modCompileOnly "com.terraformersmc:modmenu:${property("modmenu_version")}"

	// Trinkets - Removed - Not updated
	// modCompileOnly "dev.emi:trinkets:${project.trinkets_version}"

	// Accessories
	modCompileOnly "io.wispforest:accessories-fabric:${property("accessories_version")}"
	modCompileOnly "io.wispforest:owo-lib:${property("owo_version")}"
}

processResources {
	inputs.property "version", stonecutter.current.version
	inputs.property "supported", project.property("supported_versions")

	filesMatching("fabric.mod.json") {
		expand(
				"version": stonecutter.current.version,
				"supported": project.property("supported_versions")
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = stonecutter.eval(stonecutter.current.version, ">=1.20.5") ? 21 : 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	def java = stonecutter.eval(stonecutter.current.version, ">=1.20.5")
			? JavaVersion.VERSION_21 : JavaVersion.VERSION_17
	targetCompatibility = java
	sourceCompatibility = java
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
